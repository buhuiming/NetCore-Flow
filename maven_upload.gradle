def RELEASE_REPOSITORY_URL = "http://localhost:8081/nexus/content/repositories/releases/"
def SNAPSHOT_REPOSITORY_URL = "http://localhost:8081/nexus/content/repositories/snapshots/"
def NEXUS_USERNAME = "admin"
def NEXUS_PASSWORD = "admin123"

apply plugin: 'maven-publish'

afterEvaluate {
    publishing {
        repositories {
            maven {
                allowInsecureProtocol(true)
                name("AndroidReleaseMaven")
                url = RELEASE_REPOSITORY_URL
                credentials {
                    username = NEXUS_USERNAME
                    password = NEXUS_PASSWORD
                }
            }
            maven {
                allowInsecureProtocol(true)
                name("AndroidSnapshotMaven")
                url = SNAPSHOT_REPOSITORY_URL
                credentials {
                    username = NEXUS_USERNAME
                    password = NEXUS_PASSWORD
                }
            }
        }
        publications {
            Production(MavenPublication) {
                from components.release
                groupId = GROUP
                artifactId = POM_ARTIFACT_ID
                version = VERSION_NAME
                artifacts {
                    if (!project.plugins.hasPlugin('kotlin-android')) {
                        artifact tasks.named("androidSourcesJar").get()
                    }
                }
            }
            Develop(MavenPublication) {
                from components.debug
                groupId = GROUP
                artifactId = POM_ARTIFACT_ID
                version = "${VERSION_NAME}-SNAPSHOT"
                artifacts {
                    if (!project.plugins.hasPlugin('kotlin-android')) {
                        artifact tasks.named("androidSourcesJar").get()
                    }
                }
            }
        }
    }
    // 显式声明任务依赖关系
    tasks.matching { it.name.startsWith("generateMetadataFileFor") }.configureEach {
        dependsOn tasks.named("androidSourcesJar")
    }
}
// 用于打包源代码的任务
task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}